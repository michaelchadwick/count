#!/usr/bin/env ruby

require 'optparse'
require_relative '../lib/countr/version'

BINARY_NAME = $PROGRAM_NAME.split('/').last

def parse_options
  options = {
    :oneline => false
  }

  optparse = OptionParser.new do |opts|
    opts.banner =  "Displays the number of characters in a string\n"
    opts.banner += "usage: countr STRING\n"
    opts.banner += "NOTE: quotes and double-quotes will not be counted unless escaped with a \\"

    opts.on('-v', '--version', 'Display version number and exit') do
      puts "#{Countr::VERSION}"
      exit
    end

    opts.on('-n', '--no-line-break', 'No newline when returning count') do
      options[:oneline] = true
    end

    opts.on('-h', '-?', '--help', 'Display this screen and exit') do
      puts opts
      exit
    end
  end

  optparse.parse!()

  return options
end

def print_error(error)
  case error
  when OptionParser::InvalidOption
    puts "#{BINARY_NAME} ERROR: illegal option #{error.args.join(' ')}"
  else
    puts "#{BINARY_NAME} ERROR: #{error}"
  end
end

begin
  options = parse_options

  count = 0
  words = ARGV.join(" ")

  for i in 0..words.length-1 do
    count += words[i].length
  end

  if options[:oneline]
    print count
  else
    puts count
  end
rescue => error
  print_error(error)
  exit(false)
end
